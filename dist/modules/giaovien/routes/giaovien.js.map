{
  "version": 3,
  "sources": ["../../../../src/modules/giaovien/routes/giaovien.ts"],
  "sourcesContent": ["import { PrismaClient } from \"@prisma/client\"\nconst prisma = new PrismaClient()\nimport { AuthFastifyRequest, FastifyInstance, FastifyLoggerOptions, FastifyRequest } from \"fastify\"\nimport { IncomingMessage, Server, ServerResponse } from \"http\"\n\nexport default async function (\n  fastify: FastifyInstance,\n  opts: FastifyLoggerOptions\n) {\n  fastify.post(\"/add-many\", async (req, reply) => {\n    const data = await prisma.giaoVien.findMany({})\n    return {\n      data,\n      msg: \"add many records\",\n    }\n  })\n\n  //\n  fastify.post(\n    \"/create\",\n    {\n      schema: {\n        body: {\n          type: \"object\",\n          properties: {\n            email: { type: \"string\" },\n            name: { type: \"number\" },\n          },\n        },\n      },\n    },\n    async (request, reply) => {\n      const { name, email } = request.body as { name: string; email: string }\n\n      return reply.send({\n        msg: \"created\",\n      })\n    }\n  )\n\n  fastify.get(\"/list\", async (request, reply) => {\n    const giaovien = await prisma.giaoVien.findMany();\n    const hocsinh = await prisma.hocSinh.findMany();\n    return reply.send({\n      data: {giaovien, hocsinh},\n      msg: \"List...\",\n    })\n  })\n\n  fastify.get(\n    \"/:MaGV\",\n    {\n      schema: {\n        params: {\n          type: \"object\",\n          properties: {\n            MaGV: { type: \"string\" },\n          },\n        },\n      },\n    },\n    async (\n      request: FastifyRequest<\n        { Params: { MaGV: string } }\n      >,\n      reply\n    ) => {\n      const { MaGV } = request.params\n      const giaovien = await prisma.giaoVien.findFirst({\n        where: { MaGV },\n      })\n      return reply.send({\n        data: giaovien,\n        msg: giaovien ? \"OK\" : \"Kh\u00F4ng t\u00ECm th\u1EA5y\",\n      })\n    }\n  )\n\n  fastify.delete(\n    \"/:MaGV\",\n    {\n      schema: {\n        params: {\n          type: \"object\",\n          properties: {\n            MaGV: { type: \"string\" },\n          },\n        },\n      },\n    },\n    async (\n      request: FastifyRequest<{ Params: { MaGV: string } }>,\n      reply\n    ) => {\n      const { MaGV } = request.params\n      const result = await prisma.giaoVien.delete({\n        where: { MaGV },\n      })\n      return reply.send({\n        msg: result ? \"deleted\" : \"not delete\",\n      })\n    }\n  )\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA6B,0BAC7B,MAAMC,EAAS,IAAI,eAInB,eAAOH,EACLI,EACAC,EACA,CACAD,EAAQ,KAAK,YAAa,MAAOE,EAAKC,KAE7B,CACL,KAFW,MAAMJ,EAAO,SAAS,SAAS,CAAC,CAAC,EAG5C,IAAK,kBACP,EACD,EAGDC,EAAQ,KACN,UACA,CACE,OAAQ,CACN,KAAM,CACJ,KAAM,SACN,WAAY,CACV,MAAO,CAAE,KAAM,QAAS,EACxB,KAAM,CAAE,KAAM,QAAS,CACzB,CACF,CACF,CACF,EACA,MAAOI,EAASD,IAAU,CACxB,KAAM,CAAE,KAAAE,EAAM,MAAAC,CAAM,EAAIF,EAAQ,KAEhC,OAAOD,EAAM,KAAK,CAChB,IAAK,SACP,CAAC,CACH,CACF,EAEAH,EAAQ,IAAI,QAAS,MAAOI,EAASD,IAAU,CAC7C,MAAMI,EAAW,MAAMR,EAAO,SAAS,SAAS,EAC1CS,EAAU,MAAMT,EAAO,QAAQ,SAAS,EAC9C,OAAOI,EAAM,KAAK,CAChB,KAAM,CAAC,SAAAI,EAAU,QAAAC,CAAO,EACxB,IAAK,SACP,CAAC,CACH,CAAC,EAEDR,EAAQ,IACN,SACA,CACE,OAAQ,CACN,OAAQ,CACN,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,CACzB,CACF,CACF,CACF,EACA,MACEI,EAGAD,IACG,CACH,KAAM,CAAE,KAAAM,CAAK,EAAIL,EAAQ,OACnBG,EAAW,MAAMR,EAAO,SAAS,UAAU,CAC/C,MAAO,CAAE,KAAAU,CAAK,CAChB,CAAC,EACD,OAAON,EAAM,KAAK,CAChB,KAAMI,EACN,IAAKA,EAAW,KAAO,2BACzB,CAAC,CACH,CACF,EAEAP,EAAQ,OACN,SACA,CACE,OAAQ,CACN,OAAQ,CACN,KAAM,SACN,WAAY,CACV,KAAM,CAAE,KAAM,QAAS,CACzB,CACF,CACF,CACF,EACA,MACEI,EACAD,IACG,CACH,KAAM,CAAE,KAAAM,CAAK,EAAIL,EAAQ,OACnBM,EAAS,MAAMX,EAAO,SAAS,OAAO,CAC1C,MAAO,CAAE,KAAAU,CAAK,CAChB,CAAC,EACD,OAAON,EAAM,KAAK,CAChB,IAAKO,EAAS,UAAY,YAC5B,CAAC,CACH,CACF,CACF",
  "names": ["giaovien_exports", "__export", "giaovien_default", "__toCommonJS", "import_client", "prisma", "fastify", "opts", "req", "reply", "request", "name", "email", "giaovien", "hocsinh", "MaGV", "result"]
}
